{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "modulesUrl": {
            "type": "string"
        },
        "SASToken": {
            "type": "securestring"
        },
        "objectID": {
            "type": "string"
        },
        "projectNamePrefix": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "allowedValues": [
                "Standard_B1ls",
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standrad_B2s"
            ]
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "14.04.5-LTS",
                "16.04.0-LTS",
                "18.04-LTS"
            ]
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ]
        },
        "adminPassword": {
            "type": "securestring"
        }
    },
    "variables": {
        "keyVaultName": "[concat(parameters('projectNamePrefix'), '-KV-', uniqueString(resourceGroup().id))]",
        "vmName": "[concat(parameters('projectNamePrefix'), '-VMubuntu-', uniqueString(resourceGroup().id))]",
        "adminUsername": "vmadmin",
        "publicIpAddressName": "[concat(variables('vmName'), '-PIP' )]",
        "networkInterfaceName": "[concat(variables('vmName'),'-NIC')]",
        "networkSecurityGroupName": "[concat(parameters('projectNamePrefix'), '-NSG', uniqueString(resourceGroup().id))]",
        "dnsLabelPrefix": "[toLower(concat(parameters('projectNamePrefix'), uniqueString(resourceGroup().id)))]",
        "virtualNetworkName": "[concat(parameters('projectNamePrefix'), '-VNet-', uniqueString(resourceGroup().id))]",
        "subnetName": "Front-End-subnet",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "subnetAddressPrefix": "172.16.1.0/24",
        "addressPrefix": "172.16.0.0/16",
        "RecoveryVaultName": "[concat(parameters('projectNamePrefix'), '-RV-', uniqueString(resourceGroup().id))]",
        "backupFabric": "AzureVM",
        "protectionContainer": "[concat('iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', variables('vmName'))]",
        "protectedItem": "[concat('vm;iaasvmcontainerv2;', resourceGroup().name, ';', variables('vmName'))]",
        "customPolicyName": "AzVmPolicy3days",
        "instantRpRetentionRangeInDays": 3,
        "dailyRetentionDurationCount": 7,
        "scheduleRunTimes": [
            "2020-01-01T01:30:00Z"
        ],
        "timeZone": "UTC"
    },
    "resources": [
        {
            "name": "[variables('keyVaultName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('modulesUrl'),'/keyVault.json',parameters('SASToken'))]"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "objectID": {
                        "value": "[parameters('objectId')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "secretName": {
                        "value": "[variables('adminUsername')]"
                    },
                    "secretValue": {
                        "value": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 100,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabelPrefix')]"
                },
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[variables('keyVaultName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "dataDisks": [
                        {
                            "createOption": "Empty",
                            "lun": 0,
                            "diskSizeGB": 32,
                            "managedDisk": {
                                "storageAccountType": "[parameters('osDiskType')]"
                            }
                        }
                    ],
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                }
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2018-01-10",
            "location": "[parameters('location')]",
            "name": "[variables('RecoveryVaultName')]",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {
            }
        },
        {
            "apiVersion": "2016-12-01",
            "name": "[concat(variables('RecoveryVaultName'), '/', variables('customPolicyName'))]",
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "dependsOn": [
                "[concat('Microsoft.RecoveryServices/vaults/', variables('RecoveryVaultName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRpRetentionRangeInDays": "[variables('instantRpRetentionRangeInDays')]",
                "schedulePolicy": {
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunDays": null,
                    "scheduleRunTimes": "[variables('scheduleRunTimes')]",
                    "schedulePolicyType": "SimpleSchedulePolicy"
                },
                "retentionPolicy": {
                    "dailySchedule": {
                        "retentionTimes": "[variables('scheduleRunTimes')]",
                        "retentionDuration": {
                            "count": "[variables('dailyRetentionDurationCount')]",
                            "durationType": "Days"
                        }
                    },
                    "retentionPolicyType": "LongTermRetentionPolicy"
                },
                "timeZone": "[variables('timeZone')]"
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "apiVersion": "2016-12-01",
            "name": "[concat(variables('RecoveryVaultName'), '/', variables('backupFabric'), '/', variables('protectionContainer'), '/', variables('protectedItem'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults', variables('RecoveryVaultName'))]"
            ],
            "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('RecoveryVaultName'), variables('customPolicyName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
            }
        }
    ],
    "outputs": {
        "recoveryVaultName": {
            "type": "string",
            "value": "[variables('RecoveryVaultName')]"
        },
        "vmName": {
            "type": "string",
            "value": "[variables('vmName')]"
        },
        "vmSize": {
            "type": "string",
            "value": "[parameters('vmSize')]"
        },
        "nsgID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "subnetID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
        },
        "pubIpName": {
            "type": "string",
            "value": "[variables('publicIpAddressName')]"
        },
        "location": {
            "type": "string",
            "value": "[parameters('location')]"
        },
        "nicName": {
            "type": "string",
            "value": "[variables('networkInterfaceName')]"
        }
    }
}